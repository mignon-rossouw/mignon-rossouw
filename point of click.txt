<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Modal Animation</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <button class="open-btn">Click Me 1</button>
    <button class="open-btn">Click Me 2</button>
    <button class="open-btn">Click Me 3</button>

    <div class="modal" id="modal">
        <div class="modal-content">
            <span class="close-btn" id="close-btn">&times;</span>
            <p>Here is a cool modal!</p>
        </div>
    </div>

    <script src="script.js"></script>
</body>
</html>


body {
    font-family: Arial, sans-serif;
}

.open-btn {
    padding: 10px 20px;
    cursor: pointer;
    font-size: 16px;
}

.modal {
    display: none;
    position: fixed;
    top: 20px;
    left: 20px;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    justify-content: center;
    align-items: center;
    opacity: 0;
    transition: opacity 0.5s ease;
}

.modal.open {
    display: flex;
    opacity: 1;
}

.modal-content {
    background-color: white;
    padding: 20px;
    border-radius: 10px;
    max-width: 400px;
    text-align: center;
    position: absolute;
    transform: scale(0);
    transition: transform 0.5s ease, left 0.5s ease, top 0.5s ease;
}

.close-btn {
    font-size: 30px;
    cursor: pointer;
    position: absolute;
    top: 10px;
    right: 10px;
}


const openBtns = document.querySelectorAll('.open-btn');
const modal = document.getElementById('modal');
const closeBtn = document.getElementById('close-btn');

let initialButtonPosition = null; // To store the button's initial position

// Loop through all the buttons
openBtns.forEach(button => {
    button.addEventListener('click', function (e) {
        // Get the button's position (not the mouse click position)
        const buttonRect = button.getBoundingClientRect();
        const buttonX = buttonRect.left + buttonRect.width / 2;
        const buttonY = buttonRect.top + buttonRect.height / 2;

        // Store initial position to use later when closing the modal
        initialButtonPosition = { x: buttonX, y: buttonY };

        const modalContent = modal.querySelector('.modal-content');

        // Show the modal and set initial position at the button location
        modal.style.display = 'flex';
        modal.style.opacity = 1;

        // Initially position the modal content at the button's position
        modalContent.style.transform = `scale(0)`;
        modalContent.style.left = `${buttonX - modalContent.offsetWidth / 2}px`;
        modalContent.style.top = `${buttonY - modalContent.offsetHeight / 2}px`;

        // After a small delay, animate the modal to the center
        setTimeout(() => {
            const centerX = (window.innerWidth - modalContent.offsetWidth) / 2;
            const centerY = (window.innerHeight - modalContent.offsetHeight) / 2;

            modalContent.style.transition = 'transform 0.5s ease, left 0.5s ease, top 0.5s ease';
            modalContent.style.transform = `scale(1)`;
            modalContent.style.left = `${centerX}px`;
            modalContent.style.top = `${centerY}px`;
        }, 50); // Small delay to ensure initial position is set
    });
});

closeBtn.addEventListener('click', () => {
    const modalContent = modal.querySelector('.modal-content');

    // Ensure modal content is going back to the initial position
    if (initialButtonPosition) {
        modalContent.style.transition = 'transform 0.5s ease, left 0.5s ease, top 0.5s ease';

        // Animate the modal content back to the button position
        modalContent.style.transform = 'scale(0)';
        modalContent.style.left = `${initialButtonPosition.x - modalContent.offsetWidth / 2}px`;
        modalContent.style.top = `${initialButtonPosition.y - modalContent.offsetHeight / 2}px`;
        
        // Hide the modal after the animation completes
        setTimeout(() => {
            modal.style.display = 'none';
        }, 500); // Wait for the animation to complete
    }
});
